<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>me.learn</groupId>
  <artifactId>md2html</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <!-- JDK版本 -->
    <java.version>1.8</java.version>
    <!--编译源码jdk版本-->
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <!--编译目标jdk版本-->
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <!--编译jdk版本-->
    <maven.compiler.compilerVersion>${java.version}</maven.compiler.compilerVersion>
    <!-- 项目编码 -->
    <project.encoding>UTF-8</project.encoding>
    <maven.compiler.encoding>${project.encoding}</maven.compiler.encoding>
    <project.source.encoding>${project.encoding}</project.source.encoding>
    <project.build.sourceEncoding>${project.encoding}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${project.encoding}</project.reporting.outputEncoding>

    <!--lombok 版本-->
    <lombok.version>1.18.12</lombok.version>
    <!--commons-codec 版本-->
    <commons.codec.version>1.14</commons.codec.version>
    <!--flexmark 版本-->
    <flexmark.version>0.61.28</flexmark.version>
    <!--slf4j版本-->
    <slf4j.version>1.7.30</slf4j.version>
    <!--logback版本-->
    <logback.version>1.2.3</logback.version>
    <!--thymeleaf版本-->
    <thymeleaf.version>3.0.11.RELEASE</thymeleaf.version>
    <!--jsoup版本-->
    <jsoup.version>1.13.1</jsoup.version>
    <!--maven-jar-plugin版本-->
    <maven.jar.plugin.version>3.2.0</maven.jar.plugin.version>
    <!--onejar-maven-plugin版本-->
    <onejar.plugin.version>1.4.4</onejar.plugin.version>
  </properties>

  <dependencies>
    <!-- https://mvnrepository.com/artifact/com.vladsch.flexmark/flexmark-all -->
    <!--<dependency>
      <groupId>com.vladsch.flexmark</groupId>
      <artifactId>flexmark-all</artifactId>
      <version>${flexmark.version}</version>
    </dependency>-->
    <!-- https://mvnrepository.com/artifact/com.vladsch.flexmark/flexmark -->
    <!--<dependency>
      <groupId>com.vladsch.flexmark</groupId>
      <artifactId>flexmark</artifactId>
      <version>${flexmark.version}</version>
    </dependency>-->
    <!-- https://mvnrepository.com/artifact/com.vladsch.flexmark/flexmark-util -->
    <dependency>
      <groupId>com.vladsch.flexmark</groupId>
      <artifactId>flexmark-util</artifactId>
      <version>${flexmark.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.vladsch.flexmark/flexmark-ext-tables -->
    <dependency>
      <groupId>com.vladsch.flexmark</groupId>
      <artifactId>flexmark-ext-tables</artifactId>
      <version>${flexmark.version}</version>
    </dependency>
    <!--https://mvnrepository.com/artifact/commons-codec/commons-codec-->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons.codec.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
    <!--<dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>-->
    <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
      <!--<scope>test</scope>-->
    </dependency>
    <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-core -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logback.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf -->
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf</artifactId>
      <version>${thymeleaf.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>${jsoup.version}</version>
    </dependency>

  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.plugin.version}</version>
        <configuration>
          <archive>
            <!-- 添加maven 描述,是否包含pom.xml和pom.properties等文件 -->
            <addMavenDescriptor>false</addMavenDescriptor>
            <manifest>
              <!--程序入口类-->
              <mainClass>me.learn.App</mainClass>
              <!--将依赖jar加入清单文件Class-path-->
              <addClasspath>true</addClasspath>
              <!--清单文件中Class-path路径-->
              <classpathPrefix>lib/</classpathPrefix>
            </manifest>
          </archive>
          <excludes>
            <!-- 过滤掉不希望包含在jar中的文件  -->
            <exclude>**/assembly/</exclude>
            <exclude>**/META-INF/</exclude>
            <!--<exclude>**/logback-test.xml</exclude>-->
          </excludes>
        </configuration>
      </plugin>

      <!-- 使用 onejar-maven-plugin 插件生成 all-in-one jar包-->
      <plugin>
        <groupId>com.jolira</groupId>
        <artifactId>onejar-maven-plugin</artifactId>
        <version>${onejar.plugin.version}</version>
        <executions>
          <execution>
            <configuration>
              <!--程序入口,配合maven-jar-plugin插件使用时不需要，单独使用时自己的jar包不会添加classpath-->
              <!--<mainClass>me.learn.App</mainClass>-->
              <attachToBuild>true</attachToBuild>
              <classifier>onejar</classifier>
            </configuration>
            <goals>
              <goal>one-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>